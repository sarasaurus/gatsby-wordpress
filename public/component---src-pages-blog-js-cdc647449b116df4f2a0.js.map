{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./src/components/notes.module.css","webpack:///./src/components/post-link.js","webpack:///./src/components/notes.js"],"names":["Blog","render","console","log","this","props","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_notes__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Header","_ref","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","Helmet_default","title","site","siteMetadata","meta","name","content","lang","header","paddingTop","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","rng","bytesToUuid","options","buf","offset","i","Array","rnds","random","ii","getRandomValues","crypto","bind","window","msCrypto","rnds8","Uint8Array","Math","byteToHex","toString","substr","bth","join","notes","PostLink","post","frontmatter","path","date","excerpt","styles","Notes","allMarkdownRemark","edges","PostList","filter","edge","map","key","uuid4","post_link","id"],"mappings":"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","file":"component---src-pages-blog-js-cdc647449b116df4f2a0.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Notes from '../components/notes'\n\nimport Layout from '../components/layout'\n\nclass Blog extends Component {\n  render () {\n    console.log('BLOG DATA', this.props.data);\n    return (\n      <Layout>\n      <h1>Blog Posts</h1>\n      <p>Welcome to the Blog</p>\n      <Notes data={this.props.data}/>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n    )\n  }\n}\nexport default Blog;\n// can I add prop type validation for props?\n\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"notes-module--notes--2yLN7\"};","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <div>\n  \n    <Link to={post.frontmatter.path}>\n\n      {post.frontmatter.title} ({post.frontmatter.date})\n    </Link>\n    <p>{post.excerpt}</p>\n    <button><Link to={post.frontmatter.path}>Read more</Link></button>\n  </div>\n)\nconsole.log('POSTLINK POST DATA', PostLink);\nexport default PostLink","import React from 'react';\n// import { graphql } from \"gatsby\"\nimport uuid4 from 'uuid/v4';\nimport PostLink from \"./post-link\";\nimport styles from './notes.module.css';\n\n\nconsole.log('NOTE STYLE:', styles);\n\n// data: {\n//   allMarkdownRemark: { edges }\n// },\nconst Notes = (props) => {\n  // TODO: turn these into cards with excerpts then on click display the whole post, is this where redux would come in?\n  \n  console.log('NOTES DATA', props.data);\n  console.log('EDGES OR SOMETHING?', props.data.allMarkdownRemark.edges);\n  // in a react class component, you could access data via props? like: this.props.data?\n  // console.log('WHAT DATA BRO', edges);\n  const PostList = props.data.allMarkdownRemark.edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <li key={uuid4()}><PostLink key={edge.node.id} post={edge.node} /></li>);\n   \n  return (\n    <div><ul>{PostList}</ul></div>\n\n  )\n}\n\nexport default Notes;"],"sourceRoot":""}